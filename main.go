package main

import (
	"html/template"
	"github.com/gin-gonic/contrib/static"
	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"     // swagger embed files
	ginSwagger "github.com/swaggo/gin-swagger" // gin-swagger middleware
	_ "github.com/zdtsw/Gobra/docs"            // docs is generated by Swag CLI, you have to import it.
	"github.com/zdtsw/Gobra/logic"
	_ "github.com/zdtsw/Gobra/logic"
)

// @title Swagger Gobra API
// @version beta
// @description Swagger API doc for Gobra.
// @termsOfService http://swagger.io/terms/

// @contact.name Wen Zhou
// @contact.email ericchou19831101@msn.com

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:8888
// @BasePath /api/v1

// main function definition
func main() {

	if logic.Release {
		gin.SetMode(gin.ReleaseMode)
	}

	r := gin.Default()

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	// register some functions
	r.SetFuncMap(template.FuncMap{
		"convertFileJSONResp": logic.ConvertFileJSONResp,
		"showStatusIcon":      logic.ShowStatusIcon,
	})

	r.LoadHTMLGlob("template/**/*.tmpl")
	r.Use(static.Serve("/img", static.LocalFile("./html/img", true)))
	// r.Use(static.Serve("/css", static.LocalFile("./html/css", true)))
	r.RedirectFixedPath = true
	r.RedirectTrailingSlash = true

	v1 := r.Group("/api/v1")
	{
		v1.GET("/", logic.ShowIndexPage)
		bilbo := v1.Group("/bilbo")
		{
			bilbo.GET("/health", logic.HealthBilboHandler)
			bilbo.GET("/create/:proj", logic.CreateBilboHandler)
			bilbo.GET("/update/:proj", logic.UpdateBilboHandler)
			bilbo.GET("/query/:proj", logic.QueryBilboHandler)
		}
		jenkins := v1.Group("/jenkins")
		{
			jenkins.GET("/info", logic.ProjectInfoHandler)
			jenkins.GET("/project/:proj", logic.JenkinsInstanceHandler)
		}
		k8s := v1.Group("/k8s")
		{
			k8s.GET("/list", logic.ListServiceHandler)
			k8s.GET("/action/:action", logic.CreateServiceHandler)
		}
		aws := v1.Group("/aws")
		{
			aws.GET("/sum", logic.AWSServiceHandler)
			aws.GET("/svc/:service", logic.Dispatcher)
		}
	}

	r.Run(":8888")
}
